package psp.chatcliente;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Alberto
 */
public class main extends javax.swing.JFrame {

    final String ipDefecto = "localhost";
    final int puertoDefecto = 5555;

    // Para el botón On/Off
    Boolean encendido = false;

    String conversacion = "";

    // Array de bytes para el recoger la información del servidor
    byte[] resultado;

    Socket clienteSocket;
    InputStream is;
    OutputStream os;

    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        BtnOcultar = new javax.swing.JButton();
        lTituloDireccion = new javax.swing.JLabel();
        TxtDirec = new javax.swing.JTextField();
        TxtPuerto = new javax.swing.JTextField();
        lTituloPuerto = new javax.swing.JLabel();
        BtnAceptar = new javax.swing.JButton();
        BtnDefecto = new javax.swing.JButton();
        LInsertIp = new javax.swing.JLabel();
        LInsertPuerto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txArea = new javax.swing.JTextArea();
        txtEscribir = new javax.swing.JTextField();
        BtnEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(246, 250, 241));

        jPanel2.setBackground(new java.awt.Color(240, 227, 210));

        BtnOcultar.setFont(new java.awt.Font("Tahoma", 1, 3)); // NOI18N
        BtnOcultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_DesplazarReposo.png"))); // NOI18N
        BtnOcultar.setToolTipText("");
        BtnOcultar.setBorder(null);
        BtnOcultar.setBorderPainted(false);
        BtnOcultar.setContentAreaFilled(false);
        BtnOcultar.setFocusPainted(false);
        BtnOcultar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_DesplazarActivo.png"))); // NOI18N

        lTituloDireccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lTituloDireccion.setForeground(new java.awt.Color(134, 146, 153));
        lTituloDireccion.setText("Dirección:");
        lTituloDireccion.setToolTipText("");

        lTituloPuerto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lTituloPuerto.setForeground(new java.awt.Color(134, 146, 153));
        lTituloPuerto.setText("Puerto:");
        lTituloPuerto.setToolTipText("");

        BtnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_AceptarReposo.png"))); // NOI18N
        BtnAceptar.setBorder(null);
        BtnAceptar.setBorderPainted(false);
        BtnAceptar.setContentAreaFilled(false);
        BtnAceptar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_AceptarActivo.png"))); // NOI18N
        BtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAceptarActionPerformed(evt);
            }
        });

        BtnDefecto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_DefectoReposo.png"))); // NOI18N
        BtnDefecto.setBorder(null);
        BtnDefecto.setBorderPainted(false);
        BtnDefecto.setContentAreaFilled(false);
        BtnDefecto.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/Btn_DefectoActivo.png"))); // NOI18N
        BtnDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDefectoActionPerformed(evt);
            }
        });

        LInsertIp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LInsertIp.setForeground(new java.awt.Color(134, 146, 153));
        LInsertIp.setText("Ip:");
        LInsertIp.setToolTipText("");

        LInsertPuerto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LInsertPuerto.setForeground(new java.awt.Color(134, 146, 153));
        LInsertPuerto.setText("Puerto:");
        LInsertPuerto.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnOcultar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnAceptar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LInsertPuerto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lTituloPuerto)
                                .addComponent(lTituloDireccion)
                                .addComponent(TxtDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TxtPuerto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LInsertIp, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BtnDefecto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnOcultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lTituloDireccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lTituloPuerto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnAceptar)
                .addGap(34, 34, 34)
                .addComponent(BtnDefecto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LInsertIp)
                .addGap(18, 18, 18)
                .addComponent(LInsertPuerto)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        txArea.setEditable(false);
        txArea.setColumns(20);
        txArea.setRows(5);
        jScrollPane1.setViewportView(txArea);

        txtEscribir.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEscribir.setAutoscrolls(false);
        txtEscribir.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        BtnEnviar.setText("Enviar");
        BtnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEscribir))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAceptarActionPerformed
        Encender(TxtDirec.getText(), Integer.parseInt(TxtPuerto.getText()));
        LInsertIp.setText("Dirección: " + TxtDirec.getText());
        LInsertPuerto.setText("Puerto: " + TxtPuerto.getText());
    }//GEN-LAST:event_BtnAceptarActionPerformed

    private void BtnDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDefectoActionPerformed
        Encender(ipDefecto, puertoDefecto);
        LInsertIp.setText("Dirección: " + ipDefecto);
        LInsertPuerto.setText("Puerto: " + String.valueOf(puertoDefecto));
    }//GEN-LAST:event_BtnDefectoActionPerformed

    private void BtnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEnviarActionPerformed
        recibirTexto(txtEscribir.getText());
        txtEscribir.setText("");
    }//GEN-LAST:event_BtnEnviarActionPerformed

    /**
     * Función On/Off, que conecta y desconecta(además de cerrar la calculadora)
     * el cliente con el servidor
     *
     * @param direccion
     * @param Puerto
     */
    public void Encender(String direccion, int Puerto) {
        if (encendido == false) {

            try {
                encendido = true;

                clienteSocket = new Socket();

                InetSocketAddress addr = new InetSocketAddress(direccion, Puerto);

                clienteSocket.connect(addr);

                is = clienteSocket.getInputStream();
                os = clienteSocket.getOutputStream();
                
                // Creamos un usuario donde en la clase se creará un hilo que se pondrá a la escuha de cualquier menjase que recibe del servidor
                new Usuarios(clienteSocket);
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                System.out.println("Cerrando el socket cliente");

                clienteSocket.close();

                System.exit(0);
                System.out.println("Terminado");
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * Funcion que recibe el texto y lo devuelve
     *
     * @param texto
     * @return texto
     */
    private void recibirTexto(String texto) {
        functionOsIs(texto);
    }

    /**
     * Función que inserta las respuestas de los conversantes del chat en el
     * TextArea
     *
     * @param resTexto
     */
    public void insertText(String resTexto) {
       // conversacion += resTexto + "\n";

      //  txArea.setText(conversacion);
    }

    /**
     * Función que envia el calculo al servidor y recoge el resultado de este.
     *
     * @param calculo
     */
    private void functionOsIs(String texto) {

        try {
            System.out.println("Calculo que enviamos " + texto);

            os.write(texto.getBytes());

            resultado = new byte[2000];

//            is.read(resultado);
//
//            String respuesta = new String(resultado);
//            System.out.println("Mensaje que recibimos  " + respuesta);
            //   insertText(new String(resultado));
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAceptar;
    private javax.swing.JButton BtnDefecto;
    private javax.swing.JButton BtnEnviar;
    private javax.swing.JButton BtnOcultar;
    private javax.swing.JLabel LInsertIp;
    private javax.swing.JLabel LInsertPuerto;
    private javax.swing.JTextField TxtDirec;
    private javax.swing.JTextField TxtPuerto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lTituloDireccion;
    private javax.swing.JLabel lTituloPuerto;
    public static javax.swing.JTextArea txArea;
    private javax.swing.JTextField txtEscribir;
    // End of variables declaration//GEN-END:variables
}
